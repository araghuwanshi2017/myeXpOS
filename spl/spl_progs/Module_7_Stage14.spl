
//*********************************** MODULE 7 (BOOT MODULE)********************

//print "In Boot1";
alias cunter R0;

//Load Process2
loadi(83 , 69);

//Load Process3
loadi(91 , 70);

//Load Process4
loadi(95 , 71);

//Load Int7
loadi(16, 29);
loadi(17, 30);

//Load Timer
loadi(4,17);
loadi(5,18);

//Init/Login
loadi(65,7);
loadi(66,8);

//Load INT 10
loadi(22,35);
loadi(23,36);

//Exception Handler
loadi(2, 15);
loadi(3, 16);

//Library Load
loadi(63 , 13);
loadi(64 , 14);

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

//Library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";


//Heap
[PTBR + 4] = 78;
[PTBR + 5] = "0110";
[PTBR + 6] = 79;
[PTBR + 7] = "0110";


//Code
[PTBR + 8] = 65;
[PTBR + 9] = "0100";
[PTBR + 10] = 66;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//Stack
[PTBR + 16] = 76;
[PTBR + 17] = "0110";
[PTBR + 18] = 77;
[PTBR + 19] = "0110";



//INIT Process Ist
[76 * 512] = [65 * 512 + 1];

[PROCESS_TABLE  + 16 + 1] = 1;
[PROCESS_TABLE  + 16 + 4] = CREATED;
[PROCESS_TABLE  + 16 + 11] = 80;
[PROCESS_TABLE  + 16 + 12] = 0;
[PROCESS_TABLE  + 16 + 13] = 8*512;
[PROCESS_TABLE  + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE  + 16 + 15] = 10;


PTBR = PAGE_TABLE_BASE + 40;
PTLR = 10;

//Library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//Heap
[PTBR + 4] = 84;
[PTBR + 5] = "0110";
[PTBR + 6] = 85;
[PTBR + 7] = "0110";

//Code
[PTBR + 8] = 83;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//Stack
[PTBR + 16] = 86;
[PTBR + 17] = "0110";
[PTBR + 18] = 87;
[PTBR + 19] = "0110";

//2nd Process
[86 * 512] = [83 * 512 + 1];

[PROCESS_TABLE  + 32 + 1] = 2;
[PROCESS_TABLE  + 32 + 4] = CREATED;
[PROCESS_TABLE  + 32 + 11] = 88;
[PROCESS_TABLE  + 32 + 12] = 0;
[PROCESS_TABLE  + 32 + 13] = 8*512;
[PROCESS_TABLE  + 32 + 14] = PAGE_TABLE_BASE + 40;
[PROCESS_TABLE  + 32 + 15] = 10;

PTBR = PAGE_TABLE_BASE + 60;
PTLR = 10;

//Library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//Heap
[PTBR + 4] = 89;
[PTBR + 5] = "0110";
[PTBR + 6] = 90;
[PTBR + 7] = "0110";

//Code
[PTBR + 8] = 91;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//Stack
[PTBR + 16] = 92;
[PTBR + 17] = "0110";
[PTBR + 18] = 93;
[PTBR + 19] = "0110";

//3rd Process
[92 * 512] = [91 * 512 + 1];

[PROCESS_TABLE  + 48 + 1] = 3;
[PROCESS_TABLE  + 48 + 4] = CREATED;
[PROCESS_TABLE  + 48 + 11] = 94;
[PROCESS_TABLE  + 48 + 12] = 0;
[PROCESS_TABLE  + 48 + 13] = 8*512;
[PROCESS_TABLE  + 48 + 14] = PAGE_TABLE_BASE + 60;
[PROCESS_TABLE  + 48 + 15] = 10;

PTBR = PAGE_TABLE_BASE + 80;
PTLR = 10;

//Library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//Heap
[PTBR + 4] = 96;
[PTBR + 5] = "0110";
[PTBR + 6] = 97;
[PTBR + 7] = "0110";

//Code
[PTBR + 8] = 95;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//Stack
[PTBR + 16] = 98;
[PTBR + 17] = "0110";
[PTBR + 18] = 99;
[PTBR + 19] = "0110";

//4th Process
[98 * 512] = [95 * 512 + 1];

[PROCESS_TABLE  + 64 + 1] = 4;
[PROCESS_TABLE  + 64 + 4] = CREATED;
[PROCESS_TABLE  + 64 + 11] = 100;
[PROCESS_TABLE  + 64 + 12] = 0;
[PROCESS_TABLE  + 64 + 13] = 8*512;
[PROCESS_TABLE  + 64 + 14] = PAGE_TABLE_BASE + 80;
[PROCESS_TABLE  + 64 + 15] = 10;

cunter = 5;
while(cunter <= 15) do
	[PROCESS_TABLE + cunter * 16 + 4] = TERMINATED;
	cunter = cunter + 1;
endwhile;
print "In Boot2";
return;

// ****************
