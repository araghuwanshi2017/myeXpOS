
//*********************************** MODULE 4 (DEVICE MANAGER MODULE) ***********************************


alias functionNum R1;
alias currentPID R2;
alias page_Number R4;
alias block_Number R5;

// *** TERMINAL_WRITE ***
if(R1 == TERMINAL_WRITE) then //

	backup;

	R1 = 8;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_0;

	restore;

	print R3;

	backup;

	R1 = 9;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_0;

	restore;

	return ;

endif;

// ****

// *** TERMINAL_READ ***

if(R1 == TERMINAL_READ) then //

	backup;

	R1 = 8;
	call MOD_0;
 
	restore;

	read;
	breakpoint;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = WAIT_TERMINAL;

	backup;
	call MOD_5;
	restore;

	[[PTBR + (2 * (R3 / 512))] * 512 + (R3 % 512)] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 8];

	return ;

endif;

// ****

// *** DISK_LOAD ***

if(R1 == DISK_LOAD) then

// *** call DMM ***

	backup;
	R1 = 3;
	R2 = currentPID;
	call MOD_0;
	restore;

// ****
	[DISK_STATUS_TABLE + 1] = 0;  // Setting Zero For Load 
	[DISK_STATUS_TABLE + 2] = R4; // Frame_Number
	[DISK_STATUS_TABLE + 3] = R5; // Block_Number

	load(R4 , R5);
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 4] = WAIT_DISK;

	backup;
	call MOD_5; //context_Switch
	restore;
	
	return;

endif;

// ****
	

// ********_________********
